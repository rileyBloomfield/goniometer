{"Protocols/SensorNetworkDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP17hasOrderedSensorsyyF":{"name":"hasOrderedSensors()","abstract":"<p>Delegate method is called when the sensor network ordering has been completed.</p>","parent_name":"SensorNetworkDelegate"},"Protocols/SensorNetworkDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP19hasConnectedSensorsyyF":{"name":"hasConnectedSensors()","abstract":"<p>Delegate method is called when the sensor network has successfully connected to all sensors in the network.</p>","parent_name":"SensorNetworkDelegate"},"Protocols/SensorNetworkDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP22hasDisconnectedSensorsyyF":{"name":"hasDisconnectedSensors()","abstract":"<p>Delegate method is called when the network has successfully disconnected from all sensors.</p>","parent_name":"SensorNetworkDelegate"},"Protocols/SensorNetworkDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP17hasLostConnectionyyF":{"name":"hasLostConnection()","abstract":"<p>Delegate method is called when the network has detected a communication failure in one or more of the sensors in the network.</p>","parent_name":"SensorNetworkDelegate"},"Protocols/SensorNetworkDelegate.html":{"name":"SensorNetworkDelegate","abstract":"<p>Sensor network delegate should be implemented by the application delegate to handle the events generated by the static sensor network object.</p>"},"Classes/AppDelegate.html#/c:@M@kneeFlexion@objc(cs)AppDelegate(py)window":{"name":"window","abstract":"<p>Main application window</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@kneeFlexion@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:":{"name":"application(_:didFinishLaunchingWithOptions:)","abstract":"<p>Initialize main settings</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@kneeFlexion@objc(cs)AppDelegate(im)applicationWillResignActive:":{"name":"applicationWillResignActive(_:)","abstract":"<p>Application has become unactive.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@kneeFlexion@objc(cs)AppDelegate(im)applicationDidBecomeActive:":{"name":"applicationDidBecomeActive(_:)","abstract":"<p>Application has become active.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@kneeFlexion@objc(cs)AppDelegate(im)applicationWillTerminate:":{"name":"applicationWillTerminate(_:)","abstract":"<p>Application will terminate.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP17hasOrderedSensorsyyF":{"name":"hasOrderedSensors()","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP19hasConnectedSensorsyyF":{"name":"hasConnectedSensors()","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP22hasDisconnectedSensorsyyF":{"name":"hasDisconnectedSensors()","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:11kneeFlexion21SensorNetworkDelegateP17hasLostConnectionyyF":{"name":"hasLostConnection()","parent_name":"AppDelegate"},"Classes/DisplayViewController.html#/c:@M@kneeFlexion@objc(cs)DisplayViewController(py)tareButton":{"name":"tareButton","abstract":"<p>Button used to set the zero orientation of both sensors simultaneously</p>","parent_name":"DisplayViewController"},"Classes/DisplayViewController.html#/c:@M@kneeFlexion@objc(cs)DisplayViewController(py)angleDisplay":{"name":"angleDisplay","abstract":"<p>Numerical display showing the live angle of both sensors relative to each other</p>","parent_name":"DisplayViewController"},"Classes/DisplayViewController.html#/c:@M@kneeFlexion@objc(cs)DisplayViewController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Method executed when the main display is loaded.</p>","parent_name":"DisplayViewController"},"Classes/DisplayViewController.html#/c:@M@kneeFlexion@objc(cs)DisplayViewController(im)viewWillAppear:":{"name":"viewWillAppear(_:)","abstract":"<p>Method executed when the main display comes to view.</p>","parent_name":"DisplayViewController"},"Classes/DisplayViewController.html#/c:@M@kneeFlexion@objc(cs)DisplayViewController(im)viewWillDisappear:":{"name":"viewWillDisappear(_:)","abstract":"<p>Method executed when the main disappears.</p>","parent_name":"DisplayViewController"},"Classes/DisplayViewController.html#/c:@M@kneeFlexion@objc(cs)DisplayViewController(im)resetTareButtonPressed:":{"name":"resetTareButtonPressed(_:)","abstract":"<p>Resetting the tare removes the previous quaternion tare and resets it to the sensor default.</p>","parent_name":"DisplayViewController"},"Classes/DisplayViewController.html#/c:@M@kneeFlexion@objc(cs)DisplayViewController(im)tareButtonPressed:":{"name":"tareButtonPressed(_:)","abstract":"<p>Pressing the tare button assigns the current orientation of each sensor to the zeroed tare position</p>","parent_name":"DisplayViewController"},"Classes/SensorConfiguration.html#/s:11kneeFlexion19SensorConfigurationC16quaternionFilterXev":{"name":"quaternionFilter","abstract":"<p>Quaternion filter limiting stream frequency ~25Hz</p>","parent_name":"SensorConfiguration"},"Classes/SensorConfiguration.html#/c:@M@kneeFlexion@objc(cs)SensorConfiguration(py)isStreaming":{"name":"isStreaming","abstract":"<p>Stream status indicator</p>","parent_name":"SensorConfiguration"},"Classes/SensorConfiguration.html#/c:@M@kneeFlexion@objc(cs)SensorConfiguration(im)stopStreamNotifications":{"name":"stopStreamNotifications()","abstract":"<p>Stop streaming notifications from the quaternion filter</p>","parent_name":"SensorConfiguration"},"Classes/SensorConfiguration.html#/s:11kneeFlexion19SensorConfigurationC3runXeXeF":{"name":"run(onDeviceBoot:)","abstract":"<p>Code block to execute when sensor device restarts or becomes powered after a battery failure</p>","parent_name":"SensorConfiguration"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC6sharedACvZ":{"name":"shared","abstract":"<p>Singleton sensor network object.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC9isOrderedSbv":{"name":"isOrdered","abstract":"<p>If the sensors have been ordered explicitly.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC11isConnectedSbv":{"name":"isConnected","abstract":"<p>If the sensors in the sensor network are currently connected.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC11sensorCountSiv":{"name":"sensorCount","abstract":"<p>Number of sensors in the sensor network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC11hasDelegateSbv":{"name":"hasDelegate","abstract":"<p>If the network has a delegate.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC11sensorNamesSaySSGv":{"name":"sensorNames","abstract":"<p>Sensor names as assigned to the sensors previously.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC11setDelegateyAA03AppF0CF":{"name":"setDelegate(_:)","abstract":"<p>Assign a delegate to the sensor network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC09getNameOfC0SSSi7atIndex_tF":{"name":"getNameOfSensor(atIndex:)","abstract":"<p>Get the name of a particular sensor in the network order.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC020setNumberOfSensorsInD0ySiF":{"name":"setNumberOfSensorsInNetwork(_:)","abstract":"<p>Set the number of sensors that the network will use.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC28getSynchronizedBatteryStatusyySaySiGc10completion_tF":{"name":"getSynchronizedBatteryStatus(completion:)","abstract":"<p>Get a synchronized reading of battery levels for all sensors.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC27getSynchronizedSignalStatusyySaySiGc10completion_tF":{"name":"getSynchronizedSignalStatus(completion:)","abstract":"<p>Get a synchronized reading of signal levels for all sensors.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC12getStepCountyySiSgc10completion_tF":{"name":"getStepCount(completion:)","abstract":"<p>Get an averaged step count reading from each sensor.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC14resetStepCountyySbc10completion_tF":{"name":"resetStepCount(completion:)","abstract":"<p>Reset sensor network step count.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC15discoverSensorsyySbc10completion_tF":{"name":"discoverSensors(completion:)","abstract":"<p>Discover nearby sensors to add to the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC26connectAndConfigureSensorsyySbc10completion_tF":{"name":"connectAndConfigureSensors(completion:)","abstract":"<p>Connect and configure to all previously discovered sensors.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC015reconnectSingleC0ySiF":{"name":"reconnectSingleSensor(_:)","abstract":"<p>Reconnect a single sensor after individual failure has been detected.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC17disconnectSensorsyyF":{"name":"disconnectSensors()","abstract":"<p>Attempt to disconnect all sensors</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC15resetAllSensorsyyF":{"name":"resetAllSensors()","abstract":"<p>Perform a sensor reset on all sensors in the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC25resetSensorsConfigurationyySbc10completion_tF":{"name":"resetSensorsConfiguration(completion:)","abstract":"<p>Reset the sensor configuration for all sensors in the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC25orderSensorsByButtonPressyySic06buttonI7Handler_ySbc10completiontF":{"name":"orderSensorsByButtonPress(buttonPressHandler:completion:)","abstract":"<p>Reset the sensor configuration for all sensors in the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC25enableQuaternionStreamingyySayAA0F0CGc7handler_tF":{"name":"enableQuaternionStreaming(handler:)","abstract":"<p>Enable notifications for streaming quaternions.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC26disableQuaternionStreamingyyF":{"name":"disableQuaternionStreaming()","abstract":"<p>Stops quaternion streaming notifications.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC018getLoggingStatusofC0SbSi11sensorIndex_tF":{"name":"getLoggingStatusofSensor(sensorIndex:)","abstract":"<p>Get logging status of an individual sensor in the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC39retrieveAllQuaternionLogsAndKeepLoggingXeXeF":{"name":"retrieveAllQuaternionLogsAndKeepLogging(logReadyHandler:)","abstract":"<p>Begin downloading quaternion log files for all sensors in the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC23startLoggingQuaternionsyySbc10completion_tF":{"name":"startLoggingQuaternions(completion:)","abstract":"<p>Begin logging quaternions on all sensors in the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC22stopLoggingQuaternionsyySbc10completion_tF":{"name":"stopLoggingQuaternions(completion:)","abstract":"<p>Stop logging quaternions on all sensors in the network.</p>","parent_name":"SensorNetwork"},"Classes/SensorNetwork.html#/s:11kneeFlexion13SensorNetworkC19performFallibleTaskySi13numberOfTimes_yyyc_ys5Error_pctc4taskyyc7successysAF_pc7failuretF":{"name":"performFallibleTask(numberOfTimes:task:success:failure:)","abstract":"<p>Perform a sensor network task multiple times to prevent failure.</p>","parent_name":"SensorNetwork"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC1wSfv":{"name":"w","abstract":"<p>Scaler component</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC1xSfv":{"name":"x","abstract":"<p>X-axis component</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC1ySfv":{"name":"y","abstract":"<p>Y-axis component</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC1zSfv":{"name":"z","abstract":"<p>Z-axis component</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionCACycfc":{"name":"init()","abstract":"<p>Initializes a zeroed unit quaterion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionCACSf1w_Sf1xSf1ySf1ztcfc":{"name":"init(w:x:y:z:)","abstract":"<p>Initializes a quaterion with supplied components.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionCA2Ccfc":{"name":"init(_:)","abstract":"<p>Copy constructor creating a new quaternion identical to the one supplied.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC11descriptionSSv":{"name":"description","abstract":"<p>String representation of quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC12asFloatArraySaySfGv":{"name":"asFloatArray","abstract":"<p>Float array representation of quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC6negateACyF":{"name":"negate()","abstract":"<p>Negation of quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC7inverseACyF":{"name":"inverse()","abstract":"<p>Inverse of quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC9conjugateACyF":{"name":"conjugate()","abstract":"<p>Conjugation of quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC9normalizeACyF":{"name":"normalize()","abstract":"<p>Normalization of quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC12quatMultiplyA2C1q_AC1rtFZ":{"name":"quatMultiply(q:r:)","abstract":"<p>Multiplication of two quaternion rotations.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC15angleAboutXAxisSfAC8rotation_AC13withRespectTotFZ":{"name":"angleAboutXAxis(rotation:withRespectTo:)","abstract":"<p>Rotation between two quaternions about the x-axis of the relative quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC15angleAboutYAxisSfAC8rotation_AC13withRespectTotFZ":{"name":"angleAboutYAxis(rotation:withRespectTo:)","abstract":"<p>Rotation between two quaternions about the y-axis of the relative quaternion.</p>","parent_name":"Quaternion"},"Classes/Quaternion.html#/s:11kneeFlexion10QuaternionC15angleAboutZAxisSfAC8rotation_AC13withRespectTotFZ":{"name":"angleAboutZAxis(rotation:withRespectTo:)","abstract":"<p>Rotation between two quaternions about the z-axis of the relative quaternion.</p>","parent_name":"Quaternion"},"Classes/MainNavigationController.html#/c:@M@kneeFlexion@objc(cs)MainNavigationController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Used to configure the navigation controller colours and settings.</p>","parent_name":"MainNavigationController"},"Classes/ConfigureSensorsViewController.html#/c:@M@kneeFlexion@objc(cs)ConfigureSensorsViewController(py)statusLabel":{"name":"statusLabel","abstract":"<p>Label indicates the current network status.</p>","parent_name":"ConfigureSensorsViewController"},"Classes/ConfigureSensorsViewController.html#/c:@M@kneeFlexion@objc(cs)ConfigureSensorsViewController(py)activityIndicator":{"name":"activityIndicator","abstract":"<p>Displays an animating activity indicator.</p>","parent_name":"ConfigureSensorsViewController"},"Classes/ConfigureSensorsViewController.html#/c:@M@kneeFlexion@objc(cs)ConfigureSensorsViewController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Called when view is loaded.</p>","parent_name":"ConfigureSensorsViewController"},"Classes/ConfigureSensorsViewController.html#/c:@M@kneeFlexion@objc(cs)ConfigureSensorsViewController(im)viewWillAppear:":{"name":"viewWillAppear(_:)","abstract":"<p>Called when the view will appear.</p>","parent_name":"ConfigureSensorsViewController"},"Classes/ConfigureSensorsViewController.html#/c:@M@kneeFlexion@objc(cs)ConfigureSensorsViewController(im)viewDidAppear:":{"name":"viewDidAppear(_:)","abstract":"<p>Method called when the view has appeared.</p>","parent_name":"ConfigureSensorsViewController"},"Classes/ConfigureSensorsViewController.html":{"name":"ConfigureSensorsViewController","abstract":"<p>Used to connect and configure the sensor network in preparation of streaming.</p>"},"Classes/MainNavigationController.html":{"name":"MainNavigationController","abstract":"<p>Used to hold the display view and configure network view. Allows the user to navigate back to the connect and configure view at any time while viewing the displayed streaming angles.</p>"},"Classes/Quaternion.html":{"name":"Quaternion","abstract":"<p>Quaternion object containing vector elements [w,x,y,z] where w is a scalar value and x,y,z are vector components.</p>"},"Classes/SensorNetwork.html":{"name":"SensorNetwork","abstract":"<p>Sensor network organizing and controlling all sensors as a single network unit. Responsible for all sensor operations from discovery to streaming data, getting synchronized readings, maintaining connection status and disconnection.</p>"},"Classes/SensorConfiguration.html":{"name":"SensorConfiguration","abstract":"<h2 id='sensor-configuration' class='heading'>Sensor Configuration</h2>"},"Classes/DisplayViewController.html":{"name":"DisplayViewController","abstract":"<p>Main display of application used to show the user the flexion angle of the instrumented knee.</p>"},"Classes/AppDelegate.html":{"name":"AppDelegate","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}